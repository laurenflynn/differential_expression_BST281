---
title: "Differential Expression Analysis"
format: pdf
editor: source
---

First we will load the necessary libraries.


write.table(counts(ddsMat,normalized = T), file="DEseq_Normalized.txt",sep="\t",quote = F, col.names = T, row.names = T)

```{r load libraries, message=FALSE, warning=FALSE}
library(tidyverse)
library(DESeq2)
library(magrittr)
library(edgeR)
```


The data has been extracted from https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE226134 from the GSE226134_CK_10__norm.xlsx file. Lauren Mock selected for pre-treatment samples and performed data quality control.

```{r load data, cache=TRUE}
data <- read.csv("data/input/JoinedWide.csv")

property <- as.data.frame(cbind(data$SegmentDisplayName, data$METASTATIC))
names(property)=c("SegmentDisplayName","METASTATIC")
normCountData <- data[,59:ncol(data)]
row.names(normCountData) <- data$SegmentDisplayName
```

The data given is normalized, but the properties include a normalization factor that we can divide the data by to get to integer counts, which are required for DESeq. 
```{r}
intCountData <- normCountData / data$NormalizationFactor
intCountData <- data.frame(lapply(intCountData, as.integer))
```


## DESeq


```{r}
dds <- DESeqDataSetFromMatrix(countData = t(intCountData),
                              colData = property,
                              design = ~METASTATIC)
```


DESeq recommends that row counts are filtered to remove rows with very few reads, especially rows with less than 10 reads. Here it appears that we end up keeping all rows.


```{r}
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
```

Next we will run DESeq to get the differentially expressed genes.

```{r deseq steps}
dds$METASTATIC <- relevel(dds$METASTATIC, ref = "False")
dds <- DESeq(dds)
adj_pval_threshold <- 0.05
res <- results(dds, alpha = adj_pval_threshold)
summary(res)
resultsNames(dds)
DESeq2::plotMA(res)
resOrdered <- res[order(res$padj),]
resSig <- subset(resOrdered, padj < 0.05)
resSig <- subset(resSig, abs(log2FoldChange) > 1)
nrow(resSig) #113 genes
gene_names <- rownames(resSig)
#uncomment the following lines to get a printed list to input for ShinyGO
# for (gene in gene_names) {
#   cat(gene, "\n")
# } #running these genes through ShinyGO shows cancer and metabolism pathways http://bioinformatics.sdstate.edu/go/
```





```{r write file}
deseq_normalized_reads <- rbind(t(property),counts(dds,normalized = T))
colnames(deseq_normalized_reads) <- as.character(unlist(deseq_normalized_reads[1, ]))
deseq_normalized_reads <- deseq_normalized_reads[-1, ]
write.table(deseq_normalized_reads, file="data/output/DEseq_Normalized.txt",sep="\t",quote = F, col.names = T, row.names = T)


write.csv(resSig,file="data/output/deseq_diff_exp_results.csv")

```







## EdgeR

Reference: https://web.stanford.edu/class/bios221/labs/rnaseq/lab_4_rnaseq.html

First we will prepare the data and calculate the dispersion so we will next be able to find the differential expression
```{r}
d <- DGEList(counts=t(intCountData),group=property$METASTATIC)
dim(d)
#head(d$counts)
apply(d$counts, 2, sum)
#filtering steps for DESeq
keep <- rowSums(cpm(d)>100) >= 2
d <- d[keep,]
dim(d) #cuts down about 600 genes
d$samples$lib.size <- colSums(d$counts)
d <- calcNormFactors(d)
d1 <- estimateCommonDisp(d)
d1 <- estimateTagwiseDisp(d1)
plotBCV(d1)
```


We will now use our information from the dispersion calculation to check for differential expression and then compare to the results from DESeq.
```{r}
et12 <- exactTest(d1, pair=c(1,2))
topTags(et12, n=10)
de1 <- decideTestsDGE(et12, adjust.method="BH", p.value=0.05)
summary(de1)
de1tags12 <- rownames(d1)[as.logical(de1)] 
plotSmear(et12, de.tags=de1tags12)
abline(h = c(-2, 2), col = "blue")

tags <- topTags(et12, n=Inf)
top_genes <- rownames(tags$table)[tags$table$FDR < 0.05 & abs(tags$table$logFC) > 1]
```

## Compare DESeq and EdgeR


```{r genes identified in DESeq and EdgeR}
sum(top_genes %in% rownames(resSig)) #106 of 113 genes match
sum(rownames(resSig) %in% top_genes) #106; serves as a check
gene <- top_genes[top_genes %in% rownames(resSig)]
#the output of the following lines is very long so it will be omitted from our rendered document
#to get the list of genes for ShinyGO please uncomment the following lines:
# for (gene_name in gene) {
#   cat(gene_name, "\n")
# }
```


We can see that there are 106 genes in common between the results from DESeq and from EdgeR. When we plug in the overlapping genes into ShinyGO, we see pathways enriched for receptor interactions, cancer, adhesion, and signaling pathways, which make sense given the biological basis of  metastasis. 


We will use these 106 genes as the differential expression genes for downstream steps in the process. We will use the p-value information from DESeq.
```{r final dataset}
res_match <- subset(resSig, rownames(resSig) %in% top_genes)

res_match_df <- cbind(gene,as.data.frame(res_match@listData))
write.csv(res_match_df,file="data/output/deseq_edger_overlap_diff_exp_results.csv")
```
